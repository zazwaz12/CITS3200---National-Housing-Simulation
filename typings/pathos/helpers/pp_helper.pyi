"""
This type stub file was generated by pyright.
"""

from ppft import _Task

class ApplyResult(_Task):
    """result object for an 'apply' method in parallelpython

    enables a pp._Task to mimic the multiprocessing.pool.ApplyResult interface
    """

    def __init__(self, task) -> None: ...
    def ready(self):  # -> bool:
        "Checks if the result is ready"
        ...

    def successful(self):  # -> bool:
        "Measures whether result is ready and loaded w/o printing"
        ...

    def wait(self, timeout=...):  # -> None:
        """Waits for the task"""
        ...

    def get(self, timeout=...):  # -> Any:
        "Retrieves result of the task"
        ...

    def __call__(self, raw_result=...):  # -> Any:
        """Retrieves result of the task"""
        ...

    def finalize(self, sresult):  # -> None:
        """Finalizes the task  ***internal use only***"""
        ...

    @property
    def lock(self):  # -> Lock:
        ...

    @property
    def tid(self): ...
    @property
    def server(self): ...
    @property
    def callback(self):  # -> None:
        ...

    @property
    def callbackargs(self): ...
    @property
    def group(self):  # -> str:
        ...

    @property
    def finished(self):  # -> bool:
        ...

class MapResult:
    def __init__(self, size, callback=..., callbackargs=..., group=...) -> None: ...
    def finalize(self, *results):  # -> None:
        "finalize the tasks  ***internal use only***"
        ...

    def queue(self, *tasks):  # -> None:
        "Fill the MapResult with ApplyResult objects"
        ...

    def __call__(self):  # -> list[Any]:
        """Retrieve the results of the tasks"""
        ...

    def wait(self, timeout=...):  # -> None:
        "Wait for the tasks"
        ...

    def get(self, timeout=...):  # -> list[Any]:
        "Retrieves results of the tasks"
        ...

    def ready(self):  # -> bool:
        "Checks if the result is ready"
        ...

    def successful(self):  # -> bool:
        "Measures whether result is ready and loaded w/o printing"
        ...
